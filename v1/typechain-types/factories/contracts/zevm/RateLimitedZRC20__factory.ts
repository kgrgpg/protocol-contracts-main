/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RateLimitedZRC20,
  RateLimitedZRC20Interface,
} from "../../../contracts/zevm/RateLimitedZRC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "chainid_",
        type: "uint256",
      },
      {
        internalType: "enum CoinType",
        name: "coinType_",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "gasLimit_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "systemContractAddress_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallerIsNotFungibleModule",
    type: "error",
  },
  {
    inputs: [],
    name: "GasFeeTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSender",
    type: "error",
  },
  {
    inputs: [],
    name: "LowAllowance",
    type: "error",
  },
  {
    inputs: [],
    name: "LowBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroGasCoin",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroGasPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "from",
        type: "bytes",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
    ],
    name: "UpdatedGasLimit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "protocolFlatFee",
        type: "uint256",
      },
    ],
    name: "UpdatedProtocolFlatFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "systemContract",
        type: "address",
      },
    ],
    name: "UpdatedSystemContract",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "to",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gasFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "protocolFlatFee",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "CHAIN_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COIN_TYPE",
    outputs: [
      {
        internalType: "enum CoinType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FUNGIBLE_MODULE_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GAS_LIMIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROTOCOL_FLAT_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SYSTEM_CONTRACT_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WINDOW_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxWithdrawCountPerDay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxWithdrawVolumePerDay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newCount",
        type: "uint256",
      },
    ],
    name: "setMaxWithdrawCountPerDay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newVolume",
        type: "uint256",
      },
    ],
    name: "setMaxWithdrawVolumePerDay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
    ],
    name: "updateGasLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "protocolFlatFee",
        type: "uint256",
      },
    ],
    name: "updateProtocolFlatFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "updateSystemContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "to",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawGasFee",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040526003600a55683635c9adc5dea00000600b553480156200002357600080fd5b5060405162002bbf38038062002bbf83398181016040528101906200004991906200032b565b73735b14bb79463307aacbed86daf3322b1e6226ab73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620000c3576040517f2b2add3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8660069080519060200190620000db929190620001a1565b508560079080519060200190620000f4929190620001a1565b5084600860006101000a81548160ff021916908360ff16021790555083608081815250508260028111156200012e576200012d62000568565b5b60a081600281111562000146576200014562000568565b5b60f81b8152505081600181905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050505062000679565b828054620001af90620004fc565b90600052602060002090601f016020900481019282620001d357600085556200021f565b82601f10620001ee57805160ff19168380011785556200021f565b828001600101855582156200021f579182015b828111156200021e57825182559160200191906001019062000201565b5b5090506200022e919062000232565b5090565b5b808211156200024d57600081600090555060010162000233565b5090565b600062000268620002628462000445565b6200041c565b905082815260208101848484011115620002875762000286620005fa565b5b62000294848285620004c6565b509392505050565b600081519050620002ad816200061a565b92915050565b600081519050620002c48162000634565b92915050565b600082601f830112620002e257620002e1620005f5565b5b8151620002f484826020860162000251565b91505092915050565b6000815190506200030e8162000645565b92915050565b60008151905062000325816200065f565b92915050565b600080600080600080600060e0888a0312156200034d576200034c62000604565b5b600088015167ffffffffffffffff8111156200036e576200036d620005ff565b5b6200037c8a828b01620002ca565b975050602088015167ffffffffffffffff811115620003a0576200039f620005ff565b5b620003ae8a828b01620002ca565b9650506040620003c18a828b0162000314565b9550506060620003d48a828b01620002fd565b9450506080620003e78a828b01620002b3565b93505060a0620003fa8a828b01620002fd565b92505060c06200040d8a828b016200029c565b91505092959891949750929550565b6000620004286200043b565b905062000436828262000532565b919050565b6000604051905090565b600067ffffffffffffffff821115620004635762000462620005c6565b5b6200046e8262000609565b9050602081019050919050565b600062000488826200048f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015620004e6578082015181840152602081019050620004c9565b83811115620004f6576000848401525b50505050565b600060028204905060018216806200051557607f821691505b602082108114156200052c576200052b62000597565b5b50919050565b6200053d8262000609565b810181811067ffffffffffffffff821117156200055f576200055e620005c6565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b62000625816200047b565b81146200063157600080fd5b50565b600381106200064257600080fd5b50565b6200065081620004af565b81146200065c57600080fd5b50565b6200066a81620004b9565b81146200067657600080fd5b50565b60805160a05160f81c61250f620006b06000396000610a4f01526000818161099901528181610d250152610e5a015261250f6000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c8063509ef27c116100f9578063c835d7cc11610097578063eddeb12311610071578063eddeb123146104ed578063f2441b3214610509578063f687d12a14610527578063fc3b5e0b14610543576101a9565b8063c835d7cc14610482578063d9eeebed1461049e578063dd62ed3e146104bd576101a9565b806395d89b41116100d357806395d89b41146103e6578063a3413d0314610404578063a9059cbb14610422578063c701262614610452576101a9565b8063509ef27c1461037a57806370a082311461039857806385e1f4d0146103c8576101a9565b806323b872dd1161016657806342966c681161014057806342966c68146102de57806347e7ef241461030e5780634d8943bb1461033e5780634f1ff4101461035c576101a9565b806323b872dd14610272578063313ce567146102a25780633ce4a5bc146102c0576101a9565b806301f206ab146101ae57806306fdde03146101cc578063091d2788146101ea578063095ea7b31461020857806318160ddd146102385780631b56835b14610256575b600080fd5b6101b661055f565b6040516101c39190612009565b60405180910390f35b6101d4610565565b6040516101e19190611fa7565b60405180910390f35b6101f26105f7565b6040516101ff9190612009565b60405180910390f35b610222600480360381019061021d9190611c22565b6105fd565b60405161022f9190611ef5565b60405180910390f35b610240610614565b60405161024d9190612009565b60405180910390f35b610270600480360381019061026b9190611ceb565b61061e565b005b61028c60048036038101906102879190611bcf565b6106a1565b6040516102999190611ef5565b60405180910390f35b6102aa61078b565b6040516102b79190612024565b60405180910390f35b6102c86107a2565b6040516102d59190611e7a565b60405180910390f35b6102f860048036038101906102f39190611ceb565b6107ba565b6040516103059190611ef5565b60405180910390f35b61032860048036038101906103239190611c22565b6107cf565b6040516103359190611ef5565b60405180910390f35b61034661093b565b6040516103539190612009565b60405180910390f35b610364610941565b6040516103719190612009565b60405180910390f35b610382610947565b60405161038f9190612009565b60405180910390f35b6103b260048036038101906103ad9190611b35565b61094e565b6040516103bf9190612009565b60405180910390f35b6103d0610997565b6040516103dd9190612009565b60405180910390f35b6103ee6109bb565b6040516103fb9190611fa7565b60405180910390f35b61040c610a4d565b6040516104199190611f8c565b60405180910390f35b61043c60048036038101906104379190611c22565b610a71565b6040516104499190611ef5565b60405180910390f35b61046c60048036038101906104679190611c8f565b610a88565b6040516104799190611ef5565b60405180910390f35b61049c60048036038101906104979190611b35565b610bee565b005b6104a6610ce1565b6040516104b4929190611ecc565b60405180910390f35b6104d760048036038101906104d29190611b8f565b610f4e565b6040516104e49190612009565b60405180910390f35b61050760048036038101906105029190611ceb565b610fd5565b005b61051161108f565b60405161051e9190611e7a565b60405180910390f35b610541600480360381019061053c9190611ceb565b6110b3565b005b61055d60048036038101906105589190611ceb565b61116d565b005b600b5481565b6060600680546105749061226d565b80601f01602080910402602001604051908101604052809291908181526020018280546105a09061226d565b80156105ed5780601f106105c2576101008083540402835291602001916105ed565b820191906000526020600020905b8154815290600101906020018083116105d057829003601f168201915b5050505050905090565b60015481565b600061060a3384846111f0565b6001905092915050565b6000600554905090565b73735b14bb79463307aacbed86daf3322b1e6226ab73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610697576040517f2b2add3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600a8190555050565b60006106ae8484846113a9565b6000600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610769576040517f10bad14700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61077f8533858461077a919061217d565b6111f0565b60019150509392505050565b6000600860009054906101000a900460ff16905090565b73735b14bb79463307aacbed86daf3322b1e6226ab81565b60006107c63383611605565b60019050919050565b600073735b14bb79463307aacbed86daf3322b1e6226ab73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415801561086d575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b156108a4576040517fddb5de5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108ae83836117bd565b8273ffffffffffffffffffffffffffffffffffffffff167f67fc7bdaed5b0ec550d8706b87d60568ab70c6b781263c70101d54cd1564aab373735b14bb79463307aacbed86daf3322b1e6226ab60405160200161090b9190611e5f565b60405160208183030381529060405284604051610929929190611f10565b60405180910390a26001905092915050565b60025481565b600a5481565b6201518081565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6060600780546109ca9061226d565b80601f01602080910402602001604051908101604052809291908181526020018280546109f69061226d565b8015610a435780601f10610a1857610100808354040283529160200191610a43565b820191906000526020600020905b815481529060010190602001808311610a2657829003601f168201915b5050505050905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610a7e3384846113a9565b6001905092915050565b6000610a9433836118fd565b600080610a9f610ce1565b9150915060008273ffffffffffffffffffffffffffffffffffffffff166323b872dd3373735b14bb79463307aacbed86daf3322b1e6226ab856040518463ffffffff1660e01b8152600401610af693929190611e95565b602060405180830381600087803b158015610b1057600080fd5b505af1158015610b24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b489190611c62565b905080610b81576040517f0a7cd6d600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b8b3386611605565b3373ffffffffffffffffffffffffffffffffffffffff167f9ffbffc04a397460ee1dbe8c9503e098090567d6b7f4b3c02a8617d800b6d955878785600254604051610bd99493929190611f40565b60405180910390a26001935050505092915050565b73735b14bb79463307aacbed86daf3322b1e6226ab73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c67576040517f2b2add3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd55614e962c5fd6ece71614f6348d702468a997a394dd5e5c1677950226d97ae81604051610cd69190611e7a565b60405180910390a150565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630be155477f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b8152600401610d609190612009565b60206040518083038186803b158015610d7857600080fd5b505afa158015610d8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db09190611b62565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610e19576040517f78fff39600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d7fd7afb7f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b8152600401610e959190612009565b60206040518083038186803b158015610ead57600080fd5b505afa158015610ec1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee59190611d18565b90506000811415610f22576040517fe661aed000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060025460015483610f359190612123565b610f3f91906120cd565b90508281945094505050509091565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b73735b14bb79463307aacbed86daf3322b1e6226ab73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461104e576040517f2b2add3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806002819055507fef13af88e424b5d15f49c77758542c1938b08b8b95b91ed0751f98ba99000d8f816040516110849190612009565b60405180910390a150565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b73735b14bb79463307aacbed86daf3322b1e6226ab73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461112c576040517f2b2add3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806001819055507fff5788270f43bfc1ca41c503606d2594aa3023a1a7547de403a3e2f146a4a80a816040516111629190612009565b60405180910390a150565b73735b14bb79463307aacbed86daf3322b1e6226ab73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111e6576040517f2b2add3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600b8190555050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611257576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156112be576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161139c9190612009565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611410576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611477576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156114f5576040517ffe382aa700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8181611501919061217d565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461159391906120cd565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516115f79190612009565b60405180910390a350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561166c576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156116ea576040517ffe382aa700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81816116f6919061217d565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816005600082825461174b919061217d565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516117b09190612009565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611824576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806005600082825461183691906120cd565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461188c91906120cd565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516118f19190612009565b60405180910390a35050565b6000600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905062015180816002015461195391906120cd565b42106119775760008160000181905550600081600101819055504281600201819055505b600a546001826000015461198b91906120cd565b11156119cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119c390611fe9565b60405180910390fd5b600b548282600101546119df91906120cd565b1115611a20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a1790611fc9565b60405180910390fd5b6001816000016000828254611a3591906120cd565b9250508190555081816001016000828254611a5091906120cd565b92505081905550505050565b6000611a6f611a6a84612064565b61203f565b905082815260208101848484011115611a8b57611a8a6123b5565b5b611a9684828561222b565b509392505050565b600081359050611aad81612494565b92915050565b600081519050611ac281612494565b92915050565b600081519050611ad7816124ab565b92915050565b600082601f830112611af257611af16123b0565b5b8135611b02848260208601611a5c565b91505092915050565b600081359050611b1a816124c2565b92915050565b600081519050611b2f816124c2565b92915050565b600060208284031215611b4b57611b4a6123bf565b5b6000611b5984828501611a9e565b91505092915050565b600060208284031215611b7857611b776123bf565b5b6000611b8684828501611ab3565b91505092915050565b60008060408385031215611ba657611ba56123bf565b5b6000611bb485828601611a9e565b9250506020611bc585828601611a9e565b9150509250929050565b600080600060608486031215611be857611be76123bf565b5b6000611bf686828701611a9e565b9350506020611c0786828701611a9e565b9250506040611c1886828701611b0b565b9150509250925092565b60008060408385031215611c3957611c386123bf565b5b6000611c4785828601611a9e565b9250506020611c5885828601611b0b565b9150509250929050565b600060208284031215611c7857611c776123bf565b5b6000611c8684828501611ac8565b91505092915050565b60008060408385031215611ca657611ca56123bf565b5b600083013567ffffffffffffffff811115611cc457611cc36123ba565b5b611cd085828601611add565b9250506020611ce185828601611b0b565b9150509250929050565b600060208284031215611d0157611d006123bf565b5b6000611d0f84828501611b0b565b91505092915050565b600060208284031215611d2e57611d2d6123bf565b5b6000611d3c84828501611b20565b91505092915050565b611d4e816121b1565b82525050565b611d65611d60826121b1565b6122d0565b82525050565b611d74816121c3565b82525050565b6000611d8582612095565b611d8f81856120ab565b9350611d9f81856020860161223a565b611da8816123c4565b840191505092915050565b611dbc81612219565b82525050565b6000611dcd826120a0565b611dd781856120bc565b9350611de781856020860161223a565b611df0816123c4565b840191505092915050565b6000611e086036836120bc565b9150611e13826123e2565b604082019050919050565b6000611e2b6035836120bc565b9150611e3682612431565b604082019050919050565b611e4a81612202565b82525050565b611e598161220c565b82525050565b6000611e6b8284611d54565b60148201915081905092915050565b6000602082019050611e8f6000830184611d45565b92915050565b6000606082019050611eaa6000830186611d45565b611eb76020830185611d45565b611ec46040830184611e41565b949350505050565b6000604082019050611ee16000830185611d45565b611eee6020830184611e41565b9392505050565b6000602082019050611f0a6000830184611d6b565b92915050565b60006040820190508181036000830152611f2a8185611d7a565b9050611f396020830184611e41565b9392505050565b60006080820190508181036000830152611f5a8187611d7a565b9050611f696020830186611e41565b611f766040830185611e41565b611f836060830184611e41565b95945050505050565b6000602082019050611fa16000830184611db3565b92915050565b60006020820190508181036000830152611fc18184611dc2565b905092915050565b60006020820190508181036000830152611fe281611dfb565b9050919050565b6000602082019050818103600083015261200281611e1e565b9050919050565b600060208201905061201e6000830184611e41565b92915050565b60006020820190506120396000830184611e50565b92915050565b600061204961205a565b9050612055828261229f565b919050565b6000604051905090565b600067ffffffffffffffff82111561207f5761207e612381565b5b612088826123c4565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006120d882612202565b91506120e383612202565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612118576121176122f4565b5b828201905092915050565b600061212e82612202565b915061213983612202565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612172576121716122f4565b5b828202905092915050565b600061218882612202565b915061219383612202565b9250828210156121a6576121a56122f4565b5b828203905092915050565b60006121bc826121e2565b9050919050565b60008115159050919050565b60008190506121dd82612480565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000612224826121cf565b9050919050565b82818337600083830152505050565b60005b8381101561225857808201518184015260208101905061223d565b83811115612267576000848401525b50505050565b6000600282049050600182168061228557607f821691505b6020821081141561229957612298612352565b5b50919050565b6122a8826123c4565b810181811067ffffffffffffffff821117156122c7576122c6612381565b5b80604052505050565b60006122db826122e2565b9050919050565b60006122ed826123d5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b7f526174654c696d697465645a524332303a204578636565646564206d6178206460008201527f61696c79207769746864726177616c20766f6c756d6500000000000000000000602082015250565b7f526174654c696d697465645a524332303a204578636565646564206d6178206460008201527f61696c79207769746864726177616c20636f756e740000000000000000000000602082015250565b6003811061249157612490612323565b5b50565b61249d816121b1565b81146124a857600080fd5b50565b6124b4816121c3565b81146124bf57600080fd5b50565b6124cb81612202565b81146124d657600080fd5b5056fea264697066735822122037da5ae6e007a5ba43c34ed755635a9b4aace805241845a31d7ed9d08f9560b064736f6c63430008070033";

type RateLimitedZRC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RateLimitedZRC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RateLimitedZRC20__factory extends ContractFactory {
  constructor(...args: RateLimitedZRC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    decimals_: PromiseOrValue<BigNumberish>,
    chainid_: PromiseOrValue<BigNumberish>,
    coinType_: PromiseOrValue<BigNumberish>,
    gasLimit_: PromiseOrValue<BigNumberish>,
    systemContractAddress_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RateLimitedZRC20> {
    return super.deploy(
      name_,
      symbol_,
      decimals_,
      chainid_,
      coinType_,
      gasLimit_,
      systemContractAddress_,
      overrides || {}
    ) as Promise<RateLimitedZRC20>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    decimals_: PromiseOrValue<BigNumberish>,
    chainid_: PromiseOrValue<BigNumberish>,
    coinType_: PromiseOrValue<BigNumberish>,
    gasLimit_: PromiseOrValue<BigNumberish>,
    systemContractAddress_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      decimals_,
      chainid_,
      coinType_,
      gasLimit_,
      systemContractAddress_,
      overrides || {}
    );
  }
  override attach(address: string): RateLimitedZRC20 {
    return super.attach(address) as RateLimitedZRC20;
  }
  override connect(signer: Signer): RateLimitedZRC20__factory {
    return super.connect(signer) as RateLimitedZRC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RateLimitedZRC20Interface {
    return new utils.Interface(_abi) as RateLimitedZRC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RateLimitedZRC20 {
    return new Contract(address, _abi, signerOrProvider) as RateLimitedZRC20;
  }
}
